// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Data.Migrations;

[DbContext(typeof(DatabaseContext))]
partial class DatabaseContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.3")
            .HasAnnotation("Relational:MaxIdentifierLength", 63);

        NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

        modelBuilder.Entity("Domain.Token", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasColumnName("id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("timestamp with time zone")
                    .HasColumnName("created_at");

                b.Property<int>("UserId")
                    .HasColumnType("integer")
                    .HasColumnName("user_id");

                b.Property<string>("Value")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("value");

                b.HasKey("Id");

                b.HasIndex("Id")
                    .IsUnique();

                b.HasIndex("UserId");

                b.ToTable("tokens", (string)null);
            });

        modelBuilder.Entity("Domain.User", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasColumnName("id");

                NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                b.Property<string>("Email")
                    .HasColumnType("text")
                    .HasColumnName("email");

                b.Property<string>("Login")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("character varying(50)")
                    .HasColumnName("login");

                b.Property<string>("Password")
                    .IsRequired()
                    .HasColumnType("text")
                    .HasColumnName("password");

                b.HasKey("Id");

                b.HasIndex("Id")
                    .IsUnique();

                b.HasIndex("Login")
                    .IsUnique();

                b.ToTable("users", (string)null);
            });

        modelBuilder.Entity("Domain.Token", b =>
            {
                b.HasOne("Domain.User", "User")
                    .WithMany()
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });
#pragma warning restore 612, 618
    }
}
