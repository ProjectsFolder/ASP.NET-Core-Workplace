version: '3.4'

name: apitest

networks:
  backend:

services:
  api:
    image: apitest
    hostname: apitest
    build:
      dockerfile: ApiTest/Dockerfile
      context: .
    depends_on:
      - db
      - rabbitmq
      - redis
    ports:
      - "17000:8080"
      - "17006:8090"
    networks:
      - backend

  db:
    image: postgres:16-alpine
    hostname: apitest_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: apitest
    volumes:
      - ./docker/mount/pgsql:/var/lib/postgresql/data
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4:7.7
    hostname: apitest_pgadmin
    user: root
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "17001:80"
    volumes:
      - ./docker/mount/pgadmin:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    depends_on:
      - db
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.13.0-management
    hostname: apitest_rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - 17002:15672
      - 17003:5672
    volumes:
      - ./docker/mount/rabbitmq:/var/lib/rabbitmq
    networks:
      - backend

  mailhog:
    image: mailhog/mailhog:latest
    hostname: apitest_mailhog
    restart: always
    ports:
      - "17004:8025"
      - "17005:1025"
    networks:
      - backend

  redis:
    image: redis:7.2-alpine
    hostname: apitest_redis
    restart: always
    ports:
      - "17007:6739"
    environment:
      REDIS_PASSWORD: password
      REDIS_PORT: 6379
      REDIS_DATABASES: 16
    volumes:
      - ./docker/mount/redis/data:/data
    networks:
      - backend

  db_keycloak:
    image: postgres:16-alpine
    hostname: apitest_db_keycloak
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: apitest_keycloak
    volumes:
      - ./docker/mount/keycloak_pgsql:/var/lib/postgresql/data
    networks:
      - backend

  keycloak:
    image: keycloak/keycloak:18.0.0
    hostname: apitestkeycloak
    command:
      - start-dev
    restart: always
    environment:
      KC_DB: postgres
      KC_DB_URL: 'jdbc:postgresql://db_keycloak:5432/apitest_keycloak'
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    ports:
      - 17008:8080
    depends_on:
      - db_keycloak
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend

  kafka-ui:
    image: provectuslabs/kafka-ui
    hostname: kafka-ui
    ports:
      - 17009:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    links:
      - kafka
      - zookeeper
    networks:
      - backend
